{"version":3,"sources":["components/Selectionbar.js","components/VideoItem.js","components/videolist.js","components/VideoPlayer.js","api/youtube.js","App.js","reportWebVitals.js","index.js"],"names":["Selectionbar","getvideos","className","onClick","VideoItem","video","selectvideo","src","snippet","thumbnails","medium","url","alt","description","title","Videolist","videos","map","id","videoId","VideoPlayer","controls","axios","create","baseURL","params","part","maxResults","key","App","useState","setVideos","selectedvideo","setSelectedVideo","search","a","youtube","get","q","response","data","items","console","log","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAceA,EAZM,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UACnB,OACI,sBAAKC,UAAU,YAAf,UACI,wBAAQA,UAAU,OAAOC,QAAS,kBAAIF,EAAU,gBAAhD,kBACA,wBAAQC,UAAU,UAAUC,QAAS,kBAAIF,EAAU,mBAAnD,qBACA,wBAAQC,UAAU,cAAcC,QAAS,kBAAIF,EAAU,uBAAvD,0BACA,wBAAQC,UAAU,YAAYC,QAAS,kBAAIF,EAAU,qBAArD,uBACA,wBAAQC,UAAU,UAAUC,QAAS,kBAAIF,EAAU,oBAAnD,0BCIGG,G,MAXG,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,MAAMC,EAAiB,EAAjBA,YACtB,OACI,sBAAKJ,UAAU,OAAOC,QAAW,kBAAIG,EAAYD,IAAjD,UACI,qBAAKE,IAAKF,EAAMG,QAAQC,WAAWC,OAAOC,IAAKC,IAAKP,EAAMG,QAAQK,cAClE,qBAAKX,UAAU,OAAf,SACKG,EAAMG,QAAQM,aCMhBC,EAVG,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,OAAOV,EAAiB,EAAjBA,YACvB,OACG,8BAEQU,EAAOC,KAAI,SAAAZ,GAAK,OAAE,cAAC,EAAD,CAAkCA,MAAOA,EAAOC,YAAaA,GAA7CD,EAAMa,GAAGC,e,iBCI3CC,EARK,SAAC,GAAa,IAAZf,EAAW,EAAXA,MAClB,OAEQ,cAAC,IAAD,CAAagB,UAAQ,EAACV,IAAG,0CAAqCN,EAAMa,GAAGC,QAA9C,S,QCHtBG,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,uCACTC,OAAO,CACHC,KAAM,UACNC,WAAY,EACZC,IANO,6CC2CAC,MAtCf,WAEA,MAA2BC,mBAAS,IAApC,mBAAOd,EAAP,KAAce,EAAd,KACA,EAAyCD,mBAAS,MAAlD,mBAAOE,EAAP,KAAqBC,EAArB,KAEMhC,EAAS,uCAAC,WAAOiC,GAAP,eAAAC,EAAA,sEACSC,EAAQC,IAAI,UACnC,CACEZ,OAAO,CACLa,EAAEJ,KAJQ,OACRK,EADQ,OAQdR,EAAUQ,EAASC,KAAKC,OACxBC,QAAQC,IAAIJ,GATE,2CAAD,sDAoBb,OACE,sBAAKrC,UAAU,MAAf,UACE,cAAC,EAAD,CAAcD,UAAWA,IAEvB+B,EAAc,cAAC,EAAD,CAAa3B,MAAS2B,IAAkB,KAGxDhB,EAAO4B,OAAO,EAAE,cAAC,EAAD,CAAW5B,OAAQA,EAAQV,YAf7B,SAACD,GAEnBqC,QAAQC,IAAItC,GACZ4B,EAAiB5B,MAY0D,SC3B9DwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f51de875.chunk.js","sourcesContent":["import './Selectionbar.css'\r\n\r\nconst Selectionbar = ({getvideos}) => {\r\n    return (\r\n        <div className='selection'>\r\n            <button className='roja' onClick={()=>getvideos(\"roja serial\")}>Roja</button>\r\n            <button className='sundari' onClick={()=>getvideos(\"sundari serial\")}>Sundari</button>\r\n            <button className='chandraleka' onClick={()=>getvideos(\"chandraleka serial\")}>ChandraLeka </button>\r\n            <button className='magaraasi' onClick={()=>getvideos(\"magaraasi serial\")}>Magaraasi</button>\r\n            <button className='andevaa' onClick={()=>getvideos(\"Anbe Vaa serial\")}>Anbe Vaa</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Selectionbar\r\n","import './VideoItem.css'\r\n\r\nconst VideoItem = ({video,selectvideo}) => {\r\n    return (\r\n        <div className=\"card\" onClick = {()=>selectvideo(video)}>\r\n            <img src={video.snippet.thumbnails.medium.url} alt={video.snippet.description} />\r\n            <div className=\"text\">\r\n                {video.snippet.title}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoItem\r\n","import React from 'react'\r\nimport VideoItem from './VideoItem'\r\n\r\nconst Videolist = ({videos,selectvideo}) => {\r\n    return (\r\n       <div>\r\n           {\r\n               videos.map(video=><VideoItem key={video.id.videoId} video={video} selectvideo={selectvideo}/>)\r\n           }\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Videolist\r\n","import React from 'react'\r\nimport ReactPlayer from 'react-player/youtube';\r\n\r\nconst VideoPlayer = ({video}) => {\r\n    return (\r\n       \r\n            <ReactPlayer controls url={`https://www.youtube.com/watch?v=${video.id.videoId}-U`} />\r\n        \r\n    )\r\n}\r\n\r\nexport default VideoPlayer\r\n","import axios from 'axios';\r\n\r\nconst apikey = 'AIzaSyB_MwB7oR1TNsTOcpL3eSAcUx6Zfgrxrl8'\r\nexport default axios.create({\r\n    baseURL: 'https:www.googleapis.com/youtube/v3/',\r\n    params:{\r\n        part: 'snippet',\r\n        maxResults: 6,\r\n        key: apikey\r\n    }\r\n\r\n})","import {useState,useEffect} from 'react';\nimport './App.css';\nimport Selectionbar from './components/Selectionbar';\nimport Videolist from './components/videolist';\nimport VideoPlayer from './components/VideoPlayer';\nimport youtube from './api/youtube';\n\nfunction App() {\n\nconst [videos,setVideos] = useState([]);\nconst [selectedvideo,setSelectedVideo] = useState(null)\n\nconst getvideos=async (search) =>{\n  const response = await youtube.get('/search',\n  {\n    params:{\n      q:search\n    }\n  })\n\n  setVideos(response.data.items);\n  console.log(response)\n\n}\nconst selectvideo = (video) =>\n{\n  console.log(video);\n  setSelectedVideo(video);\n}\n\n\n\n  return (\n    <div className=\"App\">\n      <Selectionbar getvideos={getvideos} />\n      {\n        selectedvideo?<VideoPlayer video = {selectedvideo} />:null\n      \n}{\n      videos.length>0?<Videolist videos={videos} selectvideo={selectvideo}/>:null\n    }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}